plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.github.hmcts'

repositories {
    jcenter()
    mavenCentral()
}

def springBootVersion = '2.5.2'

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation 'junit:junit:4.13.2'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    implementation "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation(group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '4.7.6') {
        // The config generator needs only the types defined in the CCD client library,
        // not all the runtime spring dependencies used by the CCD client.
        transitive = false
    }

    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    testImplementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation 'com.google.guava:guava:30.1.1-jre'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion


    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    // Types from this library are used in the config generator's API
    api group: 'de.cronn', name: 'reflection-util', version: '2.11.0'
    implementation group: 'org.objenesis', name: 'objenesis', version: '3.2'
    implementation group: 'cglib', name: 'cglib', version: '3.3.0'
    implementation group: 'net.jodah', name: 'typetools', version: '0.6.3'
    implementation 'org.reflections:reflections:0.9.12'
    implementation 'com.google.guava:guava:30.1-jre'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
}

compileJava {
    options.compilerArgs += ["-Werror"]
}

java {
    withJavadocJar()
    withSourcesJar()
}

def mavenFolder = layout.buildDirectory.dir('config-generator')
publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            groupId 'com.github.hmcts'
            artifactId project.name
            version version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Generate CCD Configuration from code')
                root.appendNode('name', 'CCD Config generator')
                root.appendNode('url', 'https://github.com/hmcts/ccd-config-generator')
            }
        }
    }
    repositories {
        maven {
            url = mavenFolder
            name = 'generator'
        }
    }
}

task cleanMaven(type: Delete) {
    delete mavenFolder
}

publishMainPublicationToGeneratorRepository.dependsOn cleanMaven

task zipGenerator(type: Zip, dependsOn: publishMainPublicationToGeneratorRepository) {
    from mavenFolder
    archiveName 'generator.zip'
    destinationDir buildDir
}
