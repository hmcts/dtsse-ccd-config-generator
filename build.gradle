
subprojects {
    apply plugin: 'checkstyle'
    apply plugin: 'java'

    version System.getenv('RELEASE_VERSION')?.replace('refs/tags/', '') ?: 'DEV-SNAPSHOT'

    compileJava   {
        sourceCompatibility = 17
        targetCompatibility = 17
        options.compilerArgs += ["-Werror"]
    }

    checkstyle {
        maxWarnings = 0
        toolVersion '10.23.1'
        sourceSets = [project.sourceSets.main]
    }

    group = 'com.github.hmcts'
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    if (project.name in ['ccd-config-generator', 'data-runtime']) {
        apply plugin: 'java-library'
        apply plugin: 'maven-publish'

        java {
            withJavadocJar()
            withSourcesJar()
        }

        def mavenFolder = rootProject.layout.buildDirectory.dir('config-generator')
        publishing {
            publications {
                Main(MavenPublication) {
                    from components.java
                    groupId 'com.github.hmcts'
                    artifactId project.name
                    version version

                    pom.withXml {
                        def root = asNode()
                        root.appendNode('description', 'Generate CCD Configuration from code')
                        root.appendNode('name', 'CCD Config generator')
                        root.appendNode('url', 'https://github.com/hmcts/ccd-config-generator')
                    }
                }
            }
            repositories {
                maven {
                    url = mavenFolder
                    name = 'generator'
                }
            }
        }
        tasks.publishMainPublicationToGeneratorRepository.outputs.dir(mavenFolder)
    }
}

tasks.register('zipGenerator', Zip) {
    from project(':ccd-config-generator').tasks.named('publishMainPublicationToGeneratorRepository')
    from project(':data-runtime').tasks.named('publishMainPublicationToGeneratorRepository')

    archiveFileName = 'generator.zip'
    destinationDirectory = layout.buildDirectory
}
